LOGGING:

El módulo logging en Python se utiliza para generar y administrar registros (logs) en una aplicación. 
Permite capturar información sobre la ejecución del programa, lo que facilita la depuración, el monitoreo y el análisis de errores.

¿PARA QUÉ SIRVE?
    Depuración: Registrar información sobre el estado de la aplicación ayuda a detectar errores.
    Monitoreo: Permite rastrear eventos importantes y el comportamiento del programa en producción.
    Análisis de errores: Guarda información detallada de errores y excepciones para facilitar su análisis.
    Registro estructurado: Se pueden generar logs con diferentes niveles de severidad y formatos.

NIVELES DE LOG EN LOGGING
Cada mensaje de log puede tener un nivel de severidad:

    DEBUG (10): Mensajes detallados, útiles para depuración.
    INFO (20): Confirmaciones de que el programa está funcionando como se espera.
    WARNING (30): Indica un problema potencial.
    ERROR (40): Un error que afecta la ejecución del programa.
    CRITICAL (50): Un error grave que podría detener la aplicación.


USO DE MANEJADORES Y CONFIGURACIONES AVANZADAS
El módulo logging permite configurar múltiples manejadores (handlers), como:

StreamHandler: Para enviar logs a la consola.
FileHandler: Para guardar logs en un archivo.
RotatingFileHandler: Para archivos de log que rotan cuando alcanzan un tamaño máximo.

-------------------------------------------------------------------------------------